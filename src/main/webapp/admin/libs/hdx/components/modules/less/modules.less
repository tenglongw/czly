//-----------------
// MODULE COMPONENT
//-----------------
//
// What happening here?
//
// Styling rules for the custom component called "module". Generally used
// as a wrapper for other components to generate structure in the format of
// header -> body -> footer. Can be actionable, draggable, scrollable or
// chromeless depending on use and placement within the application.
//
// Expects HTML in the following structure:
// <section class="module[ actionable draggable scrollable chromeless]">
// <header class="module-header">Module Name / Actions</header>
// <div class="module-body">Wrapped Component</div>
// <footer class="module-footer">Links / Miscellaneous</footer>
// </section>
//
// Optionally supported classes:
// actionable : when action dropdown is present (unused)
// draggable : used on dashboard views to enable drag/drop. forces all
// modules to a fixed height and a table layout so content
// can be centered vertically within the module body
// scrollable : used for fixed height modules (usually also draggable)
// and enables overflowing content to be scrolled within
// the module body
// chromeless : used when the default styling of a module should not be applied
// and when the wrapped object generally applies its own
// style rules to the module container elements, if present

// Dependencies
// --------------------------------------------------

// Styles
// --------------------------------------------------

.module {

	@modulePadding: 15px;

	&:first-child {
		margin-top: 0;
	}

	padding: @modulePadding;
	background: @white;
	.border-radius(@baseBorderRadius);
	.box-sizing(border-box);

	position: relative;
	.clearfix();

	&.empty-placeholder {
		visibility: hidden;
		display: none;

		&:first-child:last-child {
			display: block;
		}

		+ .module {
			margin-top: 0;
		}
	}

	.module {

		&-header {

			margin-bottom: 15px;

			line-height: @baseLineHeight;
			min-height: @baseLineHeight;

			.clearfix();
			> * {
				// Use the line-height of the header module, not the element.
				line-height: inherit;
			}

			> h1 {
				// H1 tags overlap at the inherited line-height
				line-height: 100%;
			}

			h4 {
				margin: 0 10px 0 16px;
			}

		}

		&-body {

			.clearfix();

			dl:first-child {
				margin-top: 0;
			}

			*:last-child {
				margin-bottom: 0;
			}

			> hr {
				margin: 0 -@modulePadding 5px;
				border: 1px solid @hrBorder;
			}

		}

		&-footer {
			> *:first-child {
				margin-top: @modulePadding;
			}
		}

	}

	&.draggable, &.scrollable {
		padding: 0;
		// Forcing the height of draggables because the smaller-size D3 graphs
		// will make the modules too tall and thus wrap incorrectly.
		height: @moduleDraggableHeight;
	}

	// Draggables
	&.draggable {

		margin-top: 20px;

		// Reset the dimensions of modules since sortables and box-sizing
		// don't play nice with each other.
		.box-sizing(content-box);

		.module {

			&-header, &-footer {
				padding: @modulePadding;
			}

			&-header {
				&:hover {
					cursor: move;
				}

				&:active {
					background-color: @grayLightest;
				}
			}

			&-body {
				padding: 0 @modulePadding;
				height: @moduleBodyDraggableHeight;
			}

			&-footer {
				> :last-child {
					margin-bottom: @modulePadding;
				}
			}
		}
	}

	&.empty-placeholder {
		+ .module.draggable {
			margin-top: 0;
		}
	}

	// Scrollables
	&.scrollable {

		.module {

			&-header, &-footer {
				padding: @modulePadding;
			}

			&-header {
				margin-bottom: 0;
			}

			// Override other behaviors if we expect this module to be fixed-height scrolling.
			&-body {
				height: @moduleBodyDraggableHeight;
				overflow-x: hidden;
				overflow-y: auto;

				&,
				> div {
					display: block;
				}
			}
		}
	}

	// Chromeless
	&.chromeless {
		background: transparent;
		padding: 0;

		.module {
			&-header,
			&-footer {
				display: none;
			}
		}
	}

	// Spans full width
	&.fullwidth {
		padding: 0 0 10px;
	}

	// Sortables
	&.ui-sortable {
		&-placeholder {

			background-color: @grayLightest;
			visibility: visible !important;

			.module {
				&-header,
				&-body,
				&-footer {
					visibility: hidden;
				}
			}
		}

		&-helper {
			border: 1px solid @grayLighter;
			.module-header {
				background-color: @grayLightest;
			}
		}
	}

	// Nestables
	&.nestable {
		margin-bottom: 0;
	}

	// Collapsibles
	&.collapsible {
		padding-top: 0px;

		.module {
			&-header {
				margin-bottom: 0px;
				padding-top: 15px;
				padding-left: @modulePadding + 18px;
				cursor: pointer;
				i.module-arrow {
					position: absolute;
					left: 15px;
				}
				&:hover {
					color: @linkColorHover;
				}
			}
			&-body {
				&.collapse:before,
				&.collapsing:before {
					content: " ";
					padding-top: 15px;
				}

				margin-bottom: 0; // This is a hack against the current version of Bootstrap that introduces an animation hiccup.
			}
		}

	}

	// GROUP STYLES
	// -----------------

	&-group {

		> .module {
			.border-radius(0);

			&:first-child {
				.border-radius(@baseBorderRadius @baseBorderRadius 0 0);
			}

			&:last-child {
				.border-radius(0 0 @baseBorderRadius @baseBorderRadius);
			}
		}

		> hr {
			margin: 0;
			border: 1px solid @hrBorder;
		}
	}
}




